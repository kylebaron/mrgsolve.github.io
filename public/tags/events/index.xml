<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Events on mrgsolve</title>
    <link>/tags/events/</link>
    <description>Recent content in Events on mrgsolve</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Feb 2017 08:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/events/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Model Gallery</title>
      <link>/2017/02/23/model-gallery/</link>
      <pubDate>Thu, 23 Feb 2017 08:00:00 +0000</pubDate>
      
      <guid>/2017/02/23/model-gallery/</guid>
      <description>Load packages required for the gallery Simple PK model PK model with different bioavability and dosing lag time PK model with residual error Indirect response model driven by continuous PK Indirect response model driven by metric summarizing exposure Effect compartment model Population PK model with covariates and IOV PK with dialysis sessions 3 times per week References Session Info   library(lattice) library(ggplot2) library(dplyr) Load packages required for the gallery library(mrgsolve) library(dplyr) library(ggplot2) library(magrittr) library(tidyr)  Simple PK model About this model specification code</description>
    </item>
    
    <item>
      <title>Work with event objects</title>
      <link>/2017/01/31/work-with-event-objects/</link>
      <pubDate>Tue, 31 Jan 2017 08:00:00 +0000</pubDate>
      
      <guid>/2017/01/31/work-with-event-objects/</guid>
      <description>library(mrgsolve) library(dplyr) Introduction Event objects are simple ways to implement PK dosing events into your model simulation.
 Setup Let’s illustrate event objects with a one-compartment, PK model. We read this model from the mrgsolve internal model library.
mod &amp;lt;- mread(&amp;quot;pk1cmt&amp;quot;, modlib(), end=216, delta=0.1)  Events Events are constructed with the ev function
e &amp;lt;- ev(amt=100, ii=24, addl=6) This will implement 100 unit doses every 24 hours for a total of 7 doses.</description>
    </item>
    
    <item>
      <title>Generating input data sets for mrgsolve</title>
      <link>/2017/01/01/generating-input-data-sets-for-mrgsolve/</link>
      <pubDate>Sun, 01 Jan 2017 13:09:13 -0600</pubDate>
      
      <guid>/2017/01/01/generating-input-data-sets-for-mrgsolve/</guid>
      <description>library(mrgsolve) library(dplyr) Input data sets An important mechanism for creating robust, complex simulations is the input data set. Input data sets specify the population of individuals to simulate, including the number of individuals, each individual’s dosing interventions, each individual’s covariate values etc. The input data set is just a plain old R data.frame, but with some expectations about which columns are present and expectations for how to handle columns for certain names.</description>
    </item>
    
  </channel>
</rss>